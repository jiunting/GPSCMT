Generating GFs is SLOW! so you may want to generate all GFs that will be used for the later purpose.
For example, earthquakes only occurres in some area, and you are always using those same stations for inversion.......
In this sense, pre-generate those GFs can save you a lot of time! (especially important for EEW.)
But now in this example, I'll walk you from generate the GFs that you're focusing on and make the CMT inversion step by step

1.First generate Green's functions(GFs) for your area
  --------------------Prepare files------------------------------
  *Where's the CMT sources?
    1.1 source location file (lon,lat,depth(+)): Nantou0602.grd
  *Stations/data you are using?
    1.2 station file (stalon,stalat,staname): Nantou0602.sta
  *What velocity model?
    1.3 same structure as in Lupei Zhu's FK: vel1D_CWB.mod 
  ---------------------------------------------------------------
  OK, now open Nantou0602.GPSCMT.py, set the right path, change make_GreensFcn to True, and run:
  >> python Nantou0602.GPSCMT.py
  Go to the ./Test1 and check the *.zrt files, if there's no error, Congrats!! you are ready to go to the next step.
  If you find the output file is weird, 95% is due to the fk path! (reminder also add fk in your environment)
    For example my is: export PATH=/usr/local/fk:$PATH
    you can also test it through >>fk.pl or >>syn on Terminal


2.Convert the .zrt file into the .npy format, which will be used for the CMT inversion later
  --------------------Some explanation of format-----------------
  The GF format of .zrt file is:
  Dist. Az.   Z11  R11  T11      Z12   R12  T12      Z13  R13  T13          Z22  R22  T22           Z23  R23  T23          Z33  R33  T33    
  Dist.: the distance from grid to your station
  Az.: azimuth
  Z11: a unit of M11 to this station in the Z component
  R: radial component
  T: transverse
  *Note that all ZRT and M11~M33 follow fk convention
  ---------------------------------------------------------------
  Now open the Nantou0602.GPSCMT.py, change convert_GFs=True, and run:
  >> python Nantou0602.GPSCMT.py


3.The last step for inversion:
  Open your data file, fill out the column information in Nantou0602.GPSCMT.py start from line #------parameters for CMT inversion-----------
  so that the code can understand which column is for what.
  After that, change run_CMTinv=True and run:
  >> python Nantou0602.GPSCMT.py

Done! the inversion results are saved in:
 1.GPSCMT.log: log file that save the CMT parameters
 2.GPSCMT_all.res: residuals file for all the grid points
  2.1.GPSCMT_xxx.res: residuals at the "best" depth (this is for map view plot)
 3.GPSCMT_dhat.dat: model vectors file



4.Now you can see the inversion result by :
>> python plotout.py
